from collections import deque

def bfs(graph, start):
    visited = set()
    queue = deque([start])
    
    print("BFS Traversal Order:")
    while queue:
        node = queue.popleft()
        if node not in visited:
            print(node, end=' ')
            visited.add(node)
            queue.extend(neighbor for neighbor in graph[node] if neighbor not in visited)

def main():
    graph = {}
    num_nodes = int(input("Enter number of nodes in the graph: "))
    
    for _ in range(num_nodes):
        node = input("Enter node label: ")
        neighbors = input(f"Enter neighbors of {node} separated by spaces: ").split()
        graph[node] = neighbors
    
    start_node = input("Enter the starting node for BFS: ")
    
    if start_node not in graph:
        print("Start node not in graph.")
    else:
        bfs(graph, start_node)

if __name__ == "__main__":
    main()
