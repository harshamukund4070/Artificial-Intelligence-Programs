
def dfs(graph, node, visited=None):
    if visited is None:
        visited = set()
    
    if node not in visited:
        print(node, end=' ')
        visited.add(node)
        for neighbor in graph[node]:
            dfs(graph, neighbor, visited)

def main():
    graph = {}
    num_nodes = int(input("Enter number of nodes in the graph: "))
    
    for _ in range(num_nodes):
        node = input("Enter node label: ")
        neighbors = input(f"Enter neighbors of {node} separated by spaces: ").split()
        graph[node] = neighbors

    start_node = input("Enter the starting node for DFS: ")
    
    if start_node not in graph:
        print("Start node not in graph.")
    else:
        print("DFS Traversal Order:")
        dfs(graph, start_node)

if __name__ == "__main__":
    main()
